/* eslint-disable import/no-anonymous-default-export */

const API_URL = "http://localhost:3000/";
function parseJSON(res) {
  return res.json();
}

function checkError(json) {
  if (json.error) {
    throw new Error(json.error);
  }

  return json;
}

function defaultCallback(res) {
  return res;
}

function getQueryString(params) {
  return Object.keys(params)
    .map((k) => encodeURIComponent(k) + "=" + encodeURIComponent(params[k]))
    .join("&");
}

function request(method, path, params, token, callback = defaultCallback) {
  let qs = "";
  let body;

  const headers = (params && params.headers) || {
    Accept: "application/json",
    "Content-Type": "application/json",
  };

  if (token) {
    headers["Authorization"] = "Token token=" + token;
  }

  // if (['GET', 'DELETE'].indexOf(method) > -1) {
  if (["GET"].indexOf(method) > -1) {
    qs = "?" + getQueryString(params || {});
  } else {
    // POST or PUT
    body = params && params.body ? params.body : JSON.stringify(params || {});
  }

  const url = path + qs;

  // console.log(method, url, window.location.href);

  return fetch(url, { method, headers, body })
    .then(parseJSON)
    .then(checkError)
    .then(callback);
}

export default {
  get: (path, params, token, callback = defaultCallback) =>
    request("GET", path, params, token, callback),
  post: (path, params, token, callback = defaultCallback) =>
    request("POST", path, params, token, callback),
  put: (path, params, token, callback = defaultCallback) =>
    request("PUT", path, params, token, callback),
  delete: (path, params, token, callback = defaultCallback) =>
    request("DELETE", path, params, token, callback),
  patch: (path, params, token, callback = defaultCallback) =>
    request("PATCH", path, params, token, callback),
};
